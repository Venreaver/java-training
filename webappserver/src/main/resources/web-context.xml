<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-autowire="constructor">

    <aop:aspectj-autoproxy/>
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean class="com.epam.javatraining.dogapp.controller.ExceptionHandlerController"/>
    <!--    <bean class="com.epam.javatraining.dogapp.service.TransactionalDogService">-->
    <!--        <constructor-arg>-->
    <!--            <bean class="com.epam.javatraining.dogapp.service.DogServiceImpl"/>-->
    <!--        </constructor-arg>-->
    <!--    </bean>-->
    <!--    <bean class="com.epam.javatraining.dogapp.service.TransactionalProxy" factory-method="getInstance">-->
    <!--        <constructor-arg>-->
    <!--            <bean class="com.epam.javatraining.dogapp.service.DogServiceImpl"/>-->
    <!--        </constructor-arg>-->
    <!--    </bean>-->
    <bean class="com.epam.javatraining.dogapp.service.CglibTransactionalDogService" factory-method="getInstance">
        <constructor-arg>
            <bean class="com.epam.javatraining.dogapp.service.DogServiceImpl"/>
        </constructor-arg>
    </bean>

    <bean class="com.epam.javatraining.dogapp.aspect.LogAspect"/>
    <bean class="com.epam.javatraining.dogapp.controller.DogController"/>

    <beans profile="default">
        <jdbc:embedded-database id="dataSource" type="H2" database-name="myDB"/>
        <bean class="com.epam.javatraining.dogapp.dao.InMemoryDogDao" init-method="init"/>
        <bean class="com.epam.javatraining.dogapp.dao.JdbcConnectionHolder">
            <constructor-arg ref="dataSource"/>
        </bean>
    </beans>

    <!--run with "-Dspring.profiles.active=h2"-->
    <beans profile="h2">
        <jdbc:embedded-database id="h2DataSource" type="H2" database-name="myDB"/>
        <bean id="h2flywayConfig" class="org.flywaydb.core.api.configuration.ClassicConfiguration">
            <property name="dataSource" ref="h2DataSource"/>
        </bean>
        <bean class="org.flywaydb.core.Flyway" init-method="migrate">
            <constructor-arg ref="h2flywayConfig"/>
        </bean>
        <bean class="com.epam.javatraining.dogapp.dao.JdbcConnectionHolder">
            <constructor-arg ref="h2DataSource"/>
        </bean>
        <!--run with "-Dspring.profiles.active=h2, st"-->
        <beans profile="st">
            <bean class="com.epam.javatraining.dogapp.dao.JdbcStatementDogDao">
                <constructor-arg ref="h2DataSource"/>
            </bean>
        </beans>
        <!--run with "-Dspring.profiles.active=h2, prep"-->
        <beans profile="prep">
            <bean class="com.epam.javatraining.dogapp.dao.JdbcPreparedStatementDogDao">
                <constructor-arg ref="h2DataSource"/>
            </bean>
        </beans>
    </beans>

    <!--run with "-Dspring.profiles.active=postgres"-->
    <beans profile="postgres">
        <bean id="postgresDataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="org.postgresql.Driver"/>
            <property name="url" value="jdbc:postgresql://localhost:5432/postgres"/>
            <property name="username" value="postgres"/>
            <property name="password" value="as123"/>
        </bean>
        <bean id="postgresflywayConfig" class="org.flywaydb.core.api.configuration.ClassicConfiguration">
            <property name="dataSource" ref="postgresDataSource"/>
        </bean>
        <bean class="com.epam.javatraining.dogapp.dao.JdbcPreparedStatementDogDao">
            <constructor-arg ref="postgresDataSource"/>
        </bean>
        <bean class="org.flywaydb.core.Flyway" init-method="migrate">
            <constructor-arg ref="postgresflywayConfig"/>
        </bean>
        <bean class="com.epam.javatraining.dogapp.dao.JdbcConnectionHolder">
            <constructor-arg ref="postgresDataSource"/>
        </bean>
    </beans>

</beans>