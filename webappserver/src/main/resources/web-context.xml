<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-autowire="constructor">

    <!--PROPERTIES-->
    <context:property-placeholder location="classpath:datasource.properties"/>

    <!--DATASOURCE BEAN-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${driverClassName}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="minPoolSize" value="2"/>
        <property name="maxPoolSize" value="15"/>
        <property name="maxStatements" value="60"/>
        <property name="maxStatementsPerConnection" value="4"/>
    </bean>

    <!--APPLICATION BEANS-->
    <bean class="com.epam.javatraining.dogapp.controller.ExceptionHandlerController"/>
    <bean class="com.epam.javatraining.dogapp.controller.DogController"/>
    <bean class="com.epam.javatraining.dogapp.service.DogServiceImpl"/>
    <bean class="com.epam.javatraining.dogapp.dao.HibernateDogDao"/>

    <!--HIBERNATE-->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"/>
    <bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources" value="dog-mappings.xml"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!--OUTER BEANS-->
    <bean class="org.flywaydb.core.Flyway" init-method="migrate"/>
    <bean class="org.springframework.jdbc.core.JdbcTemplate"/>
    <bean class="org.flywaydb.core.api.configuration.ClassicConfiguration" autowire="byType"/>

    <!--AOP WITH AOP BEANS-->
    <aop:aspectj-autoproxy/>
    <bean id="logAspect" class="com.epam.javatraining.dogapp.aspect.LogAspect"/>
    <bean id="transactionalAspect" class="com.epam.javatraining.dogapp.aspect.TransactionalAspect"/>
    <aop:config>
        <aop:aspect id="logging" ref="logAspect">
            <aop:around pointcut="execution(* com.epam.javatraining.dogapp.dao.HibernateDogDao.*(..))"
                        method="log"/>
        </aop:aspect>
        <aop:aspect id="transactional" ref="transactionalAspect">
            <aop:around pointcut="@annotation(com.epam.javatraining.dogapp.aspect.Transactional)"
                        method="transactionalMethodInvoke"/>
        </aop:aspect>
    </aop:config>

    <!--ADDITIONAL CONFIGURATIONS-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <tx:annotation-driven transaction-manager="txManager"/>
</beans>